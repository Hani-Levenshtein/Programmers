#include <string>
#include <vector>
#include <algorithm>
using namespace std;
#define MIN 60
#define SEC 60
#define MILLISEC 1000

int solution(vector<string> lines) {
    int answer = 0;
    vector<int> startAt, finishAt;
    
    for(auto line: lines){
        
        int hour, minute, second, millisecond, time;
        
        hour = stoi(line.substr(11, 2)) * MIN * SEC * MILLISEC;
        minute = stoi(line.substr(14, 2)) * SEC * MILLISEC;
        second = stoi(line.substr(17, 2)) * MILLISEC;
        millisecond = stoi(line.substr(20, 3));
        
        line.pop_back();
        time = stof(line.substr(24, 5)) * MILLISEC;
        
        startAt.push_back(hour + minute + second + millisecond - time + 1);
        finishAt.push_back(hour + minute + second + millisecond);
    }
    
    for(int i = 0; i < finishAt.size(); i++) {
        
        finishAt[i] += 1000;
        int count = 0;
        
        for(int j = i; j < startAt.size() ;j++)  if (startAt[j] < finishAt[i]) count++;
        answer = max(answer,count);
    }
    return answer;
}